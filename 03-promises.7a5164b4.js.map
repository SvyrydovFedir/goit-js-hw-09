{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA5BAO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,MAAMX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GAAWH,EAAMI,cAAcC,SAEpDX,YAAW,KACT,IAAK,IAAIY,EAAI,EAAGA,GAAKH,EAAOI,MAAOD,IAAK,CAEtClB,EAAckB,EAAI,GADMJ,EAAKK,MAAQD,GAElCE,MAAKC,GAAQC,EAAAxB,GAASyB,OAAOC,QAAQH,KACrCI,OAAMC,GAASJ,EAAAxB,GAASyB,OAAOI,QAAQD,I,KAE1CxB,EAAMiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', formHandler);\n\nfunction formHandler(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  setTimeout(() => {\n    for (let i = 0; i < +amount.value; i++) {\n      const ascendantDelay = +step.value * i;\n      createPromise(i + 1, ascendantDelay)\n        .then(data => Notiflix.Notify.success(data))\n        .catch(error => Notiflix.Notify.failure(error));\n    }\n  }, +delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","step","amount","currentTarget","elements","i","value","then","data","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.7a5164b4.js.map"}