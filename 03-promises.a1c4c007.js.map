{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEnDA,E,IA5BMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5Cf,EAAwBa,EAAxBb,MAAOgB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAErBb,YAAW,WACT,IAAK,IAAIc,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,IAAK,CAEtCpB,EAAcoB,EAAI,GADMF,EAAKG,MAAQD,GAElCE,MAAK,SAAAC,G,OAAQC,EAAA1B,GAAS2B,OAAOC,QAAQH,E,IACrCI,OAAM,SAAAC,G,OAASJ,EAAA1B,GAAS2B,OAAOI,QAAQD,E,QAE1C1B,EAAMmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', formHandler);\n\nfunction formHandler(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  setTimeout(() => {\n    for (let i = 0; i < +amount.value; i++) {\n      const ascendantDelay = +step.value * i;\n      createPromise(i + 1, ascendantDelay)\n        .then(data => Notiflix.Notify.success(data))\n        .catch(error => Notiflix.Notify.failure(error));\n    }\n  }, +delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i","value","then","data","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.a1c4c007.js.map"}